generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cliente {
  id            Int           @id @default(autoincrement())
  nombre        String
  apellido      String
  dni           String        @unique
  tarjeta       String        @unique
  pinHash       String
  saldoActual   Float
  estadoCuenta  String
  cuentas       Cuenta[]
  transacciones Transaccion[]
  eventos       Evento[]
}

model Cuenta {
  id            Int           @id @default(autoincrement())
  numeroCuenta  String        @unique
  tipoMoneda    String
  saldo         Float
  estado        String
  clienteId     Int
  cliente       Cliente       @relation(fields: [clienteId], references: [id])
  transacciones Transaccion[]
}

model Cajero {
  id                 Int             @id @default(autoincrement())
  ubicacion          String
  estado             String
  efectivoDisponible Float
  agenciaId          Int
  agencia            Agencia         @relation(fields: [agenciaId], references: [id])
  transacciones      Transaccion[]
  mantenimientos     Mantenimiento[]
}

model Agencia {
  id        Int      @id @default(autoincrement())
  nombre    String
  direccion String
  telefono  String
  estado    String
  cajeros   Cajero[]
}

model Administrador {
  id             Int         @id @default(autoincrement())
  usuario        String      @unique
  clave          String
  nombreCompleto String
  auditorias     Auditoria[]
  eventos        Evento[]
}

model Auditoria {
  id                  Int           @id @default(autoincrement())
  detalleDelCambio    String
  fechaCreacion       DateTime      @default(now())
  fechaModificacion   DateTime?
  usuarioCreacion     String
  usuarioModificacion String?
  estado              String
  eliminado           Boolean       @default(false)
  administradorId     Int
  administrador       Administrador @relation(fields: [administradorId], references: [id])
}

model Tecnico {
  id             Int             @id @default(autoincrement())
  nombre         String
  apellido       String
  correo         String
  telefono       String
  mantenimientos Mantenimiento[]
}

model Mantenimiento {
  id          Int      @id @default(autoincrement())
  fecha       DateTime
  tipo        String
  descripcion String
  tecnicoId   Int
  tecnico     Tecnico  @relation(fields: [tecnicoId], references: [id])
  cajeroId    Int
  cajero      Cajero   @relation(fields: [cajeroId], references: [id])
}

model TipoTransaccion {
  id            Int           @id @default(autoincrement())
  descripcion   String
  transacciones Transaccion[]
}

model Transaccion {
  id                Int             @id @default(autoincrement())
  monto             Float
  fechaHora         DateTime        @default(now())
  saldoResultante   Float
  estado            String
  cuentaId          Int
  cuenta            Cuenta          @relation(fields: [cuentaId], references: [id])
  cajeroId          Int
  cajero            Cajero          @relation(fields: [cajeroId], references: [id])
  tipoTransaccionId Int
  tipoTransaccion   TipoTransaccion @relation(fields: [tipoTransaccionId], references: [id])
  clienteId         Int
  cliente           Cliente         @relation(fields: [clienteId], references: [id])
}

model Evento {
  id              Int            @id @default(autoincrement())
  descripcion     String
  tipoEvento      String
  clienteId       Int?
  cliente         Cliente?       @relation(fields: [clienteId], references: [id])
  administradorId Int?
  administrador   Administrador? @relation(fields: [administradorId], references: [id])
}
